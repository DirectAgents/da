@model IEnumerable<IdentitySample.Models.ApplicationUser>

@{
    ViewBag.Title = "Users Admin";
}

<section>
    <h2 class="topic">Users Admin</h2>
    <p class="small" style="color:red;">@ViewBag.StatusMessage</p>
    <p>Click on UserName, FirstName, LastName, or Package to alphabetically sort all listed users.
        You may also click on Searches/Mo and Lifetime to sort by the number of searches your users have performed.</p>
    <p>You may manually enable EmailConfirmed for any users that do not receive a confirmation email.
        You may also manually change their Package setting, even when there isn't a credit card present.
    </p>
    <p>500 Internal Server Errors typically occur if a CustomerId or SubscriptionId doesn't match what it sees on Stripe's end.
        You may manually edit your user's IDs if needed.
    </p>
<div class="" style="padding:50px;">
<p>
    @Html.ActionLink("Create New", "Create")
</p>
    <style>
        a.sort {
            text-decoration: none;
        }
        th {
            padding-right:5px;
            vertical-align:bottom;

        }
        td {
            padding-right:5px;
        }
    </style>
<table id="table" class="table" style="margin-left:auto; margin-right:auto; width: auto;">
    <thead>
        <tr>
        <th data-sort="string" style="text-align:left;"><a class="sort">@Html.DisplayNameFor(model => model.UserName)</a></th>
        <th data-sort="string" style="text-align:left;"><a class="sort">@Html.DisplayNameFor(model => model.FirstName)</a></th>
        <th data-sort="string" style="text-align:left;"><a class="sort">@Html.DisplayNameFor(model => model.LastName)</a></th>
        <th data-sort="string" style="text-align:left;"><a class="sort">@Html.DisplayNameFor(model => model.CompanyName)</a></th>
        <th data-sort="string" style="text-align:left;"><a class="sort">@Html.DisplayNameFor(model => model.PackageId)</a></th>
        <th style="text-align:left;">Email<br />Confirmed</th>
        @*<th style="text-align:left;">@Html.DisplayNameFor(model => model.EmailConfirmed)</th>*@
        <th data-sort="int" style="text-align:left;"><a class="sort">Searches</a></th>
        <th data-sort="int" style="text-align:left;"><a class="sort">Lifetime</a></th>
        <th style="text-align:left;">Date Created</th>
        <th style="text-align:left;">Options</th>
        </tr>
    </thead>
    <tbody>
    @{ int i = 0; }
    @foreach (var item in Model)
    {
        <tr>
            <td @if (i%2 == 0) { <text>style="background-color:#ededed;"</text> }>@Html.DisplayFor(modelItem => item.UserName)</td>
            <td @if (i%2 == 0) { <text>style="background-color:#ededed;"</text> }>@Html.DisplayFor(modelItem => item.FirstName)</td>
            <td @if (i%2 == 0) { <text>style="background-color:#ededed;"</text> }>@Html.DisplayFor(modelItem => item.LastName)</td>
            <td @if (i%2 == 0) { <text>style="background-color:#ededed;"</text> }>@Html.DisplayFor(modelItem => item.CompanyName)</td>
            <td @if (i%2 == 0) { <text>style="background-color:#ededed;"</text> }>@Html.DisplayFor(modelItem => item.Package.Name)</td>
            <td @if (i%2 == 0) { <text>style="background-color:#ededed;"</text> }>@Html.DisplayFor(modelItem => item.EmailConfirmed)</td>
            <td @if (i%2 == 0) { <text>style="background-color:#ededed;"</text> }>@Html.DisplayFor(modelItem => item.QueriesPerformed)</td>
            <td @if (i%2 == 0) { <text>style="background-color:#ededed;"</text> }>@Html.DisplayFor(modelItem => item.TotalQueriesPerformed)</td>
            <td @if (i%2 == 0) { <text>style="background-color:#ededed;"</text> }>@Html.DisplayFor(modelItem => item.DateCreated.Date.Month)/@Html.DisplayFor(modelItem => item.DateCreated.Date.Day)/@Html.DisplayFor(modelItem => item.DateCreated.Date.Year)</td>
            <td @if (i%2 == 0) { <text>style="background-color:#ededed;"</text> }>@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
                @Html.ActionLink("Card", "AttachCreditCard", new { id = item.Id }) |
                @Html.ActionLink("Billing", "History", new { id = item.Id })
            </td>
        </tr>
        { i+=1; }
    }
    </tbody>
</table>

    </div>
    </section>
<br /><br /><br />

@section Scripts {
<script src="~/Scripts/stupidtable.min.js" type="text/javascript"></script>
<script>
     $(function(){
        $("table").stupidtable();
     });
</script>
}