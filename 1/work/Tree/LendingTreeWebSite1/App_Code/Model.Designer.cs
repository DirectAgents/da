//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("LendingTreeWebModel", "FK_WebLogEntry_EventData", "EventData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LendingTreeWebModel.EventData), "WebLogEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LendingTreeWebModel.WebLogEntry), true)]
[assembly: EdmRelationshipAttribute("LendingTreeWebModel", "FK_WebLogEntry_EventType", "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LendingTreeWebModel.EventType), "WebLogEntry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LendingTreeWebModel.WebLogEntry), true)]

#endregion

namespace LendingTreeWebModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class LendingTreeWebEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new LendingTreeWebEntities object using the connection string found in the 'LendingTreeWebEntities' section of the application configuration file.
        /// </summary>
        public LendingTreeWebEntities() : base("name=LendingTreeWebEntities", "LendingTreeWebEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LendingTreeWebEntities object.
        /// </summary>
        public LendingTreeWebEntities(string connectionString) : base(connectionString, "LendingTreeWebEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new LendingTreeWebEntities object.
        /// </summary>
        public LendingTreeWebEntities(EntityConnection connection) : base(connection, "LendingTreeWebEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventData> EventDatas
        {
            get
            {
                if ((_EventDatas == null))
                {
                    _EventDatas = base.CreateObjectSet<EventData>("EventDatas");
                }
                return _EventDatas;
            }
        }
        private ObjectSet<EventData> _EventDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Info> Infos
        {
            get
            {
                if ((_Infos == null))
                {
                    _Infos = base.CreateObjectSet<Info>("Infos");
                }
                return _Infos;
            }
        }
        private ObjectSet<Info> _Infos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebLogEntry> WebLogEntries
        {
            get
            {
                if ((_WebLogEntries == null))
                {
                    _WebLogEntries = base.CreateObjectSet<WebLogEntry>("WebLogEntries");
                }
                return _WebLogEntries;
            }
        }
        private ObjectSet<WebLogEntry> _WebLogEntries;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventDatas(EventData eventData)
        {
            base.AddObject("EventDatas", eventData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Infos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInfos(Info info)
        {
            base.AddObject("Infos", info);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebLogEntries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebLogEntries(WebLogEntry webLogEntry)
        {
            base.AddObject("WebLogEntries", webLogEntry);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LendingTreeWebModel", Name="EventData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventData object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        public static EventData CreateEventData(global::System.Int32 id, global::System.String data)
        {
            EventData eventData = new EventData();
            eventData.Id = id;
            eventData.Data = data;
            return eventData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LendingTreeWebModel", "FK_WebLogEntry_EventData", "WebLogEntry")]
        public EntityCollection<WebLogEntry> WebLogEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebLogEntry>("LendingTreeWebModel.FK_WebLogEntry_EventData", "WebLogEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebLogEntry>("LendingTreeWebModel.FK_WebLogEntry_EventData", "WebLogEntry", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LendingTreeWebModel", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EventType CreateEventType(global::System.Int32 id, global::System.String name)
        {
            EventType eventType = new EventType();
            eventType.Id = id;
            eventType.Name = name;
            return eventType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LendingTreeWebModel", "FK_WebLogEntry_EventType", "WebLogEntry")]
        public EntityCollection<WebLogEntry> WebLogEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WebLogEntry>("LendingTreeWebModel.FK_WebLogEntry_EventType", "WebLogEntry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WebLogEntry>("LendingTreeWebModel.FK_WebLogEntry_EventType", "WebLogEntry", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LendingTreeWebModel", Name="Info")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Info : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Info object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="data">Initial value of the data property.</param>
        public static Info CreateInfo(global::System.Int32 id, global::System.String name, global::System.String data)
        {
            Info info = new Info();
            info.id = id;
            info.name = name;
            info.data = data;
            return info;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String data
        {
            get
            {
                return _data;
            }
            set
            {
                OndataChanging(value);
                ReportPropertyChanging("data");
                _data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("data");
                OndataChanged();
            }
        }
        private global::System.String _data;
        partial void OndataChanging(global::System.String value);
        partial void OndataChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LendingTreeWebModel", Name="WebLogEntry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebLogEntry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebLogEntry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="eventTypeId">Initial value of the EventTypeId property.</param>
        /// <param name="eventDataId">Initial value of the EventDataId property.</param>
        public static WebLogEntry CreateWebLogEntry(global::System.Int32 id, global::System.DateTime timestamp, global::System.Int32 eventTypeId, global::System.Int32 eventDataId)
        {
            WebLogEntry webLogEntry = new WebLogEntry();
            webLogEntry.Id = id;
            webLogEntry.Timestamp = timestamp;
            webLogEntry.EventTypeId = eventTypeId;
            webLogEntry.EventDataId = eventDataId;
            return webLogEntry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Timestamp
        {
            get
            {
                return _Timestamp;
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.DateTime _Timestamp;
        partial void OnTimestampChanging(global::System.DateTime value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeId
        {
            get
            {
                return _EventTypeId;
            }
            set
            {
                OnEventTypeIdChanging(value);
                ReportPropertyChanging("EventTypeId");
                _EventTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventTypeId");
                OnEventTypeIdChanged();
            }
        }
        private global::System.Int32 _EventTypeId;
        partial void OnEventTypeIdChanging(global::System.Int32 value);
        partial void OnEventTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventDataId
        {
            get
            {
                return _EventDataId;
            }
            set
            {
                OnEventDataIdChanging(value);
                ReportPropertyChanging("EventDataId");
                _EventDataId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventDataId");
                OnEventDataIdChanged();
            }
        }
        private global::System.Int32 _EventDataId;
        partial void OnEventDataIdChanging(global::System.Int32 value);
        partial void OnEventDataIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LendingTreeWebModel", "FK_WebLogEntry_EventData", "EventData")]
        public EventData EventData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventData>("LendingTreeWebModel.FK_WebLogEntry_EventData", "EventData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventData>("LendingTreeWebModel.FK_WebLogEntry_EventData", "EventData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventData> EventDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventData>("LendingTreeWebModel.FK_WebLogEntry_EventData", "EventData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventData>("LendingTreeWebModel.FK_WebLogEntry_EventData", "EventData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LendingTreeWebModel", "FK_WebLogEntry_EventType", "EventType")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("LendingTreeWebModel.FK_WebLogEntry_EventType", "EventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("LendingTreeWebModel.FK_WebLogEntry_EventType", "EventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("LendingTreeWebModel.FK_WebLogEntry_EventType", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("LendingTreeWebModel.FK_WebLogEntry_EventType", "EventType", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
